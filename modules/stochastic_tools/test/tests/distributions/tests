[Tests]
  issues = '#12688'
  [distributions]
    requirement = 'The system shall provide distribution function including'
    design = 'Uniform.md Weibull.md Normal.md TruncatedNormal.md '
             'Gamma.md Beta.md FDistribution.md StudentT.md '
             'JohnsonSB.md Logistic.md'
    issues = '#12720'

    [uniform]
      type = CSVDiff
      input = uniform.i
      csvdiff = 'uniform_out.csv'
      allow_test_objects = true

      detail = 'uniform,'
    []
    [weibull]
      type = CSVDiff
      input = weibull.i
      csvdiff = 'weibull_out.csv'
      allow_test_objects = true

      detail = 'Weibull (3 parameter),'
    []

    [normal]
      type = CSVDiff
      input = normal.i
      csvdiff = 'normal_out.csv'
      allow_test_objects = true

      detail = 'normal,'
    []
    [truncated_normal]
      type = CSVDiff
      input = truncated_normal.i
      csvdiff = 'truncated_normal_out.csv'
      allow_test_objects = true

      detail = 'truncated normal,'
    []
    [lognormal]
      type = CSVDiff
      input = lognormal.i
      csvdiff = 'lognormal_out.csv'
      allow_test_objects = true

      detail = 'lognormal,'
    []

    [gamma]
      type = CSVDiff
      input = gamma.i
      csvdiff = 'gamma_out.csv'
      allow_test_objects = true

      detail = 'gamma,'
    []
    [beta]
      type = CSVDiff
      input = beta.i
      csvdiff = 'beta_out.csv'
      allow_test_objects = true

      detail = 'beta,'
    []
    [fdist]
      type = CSVDiff
      input = fdist.i
      csvdiff = 'fdist_out.csv'
      allow_test_objects = true

      detail = 'F,'
    []
    [studentt]
      type = CSVDiff
      input = studentt.i
      csvdiff = 'studentt_out.csv'
      allow_test_objects = true

      detail = 'student t,'
    []

    [johnsonsb]
      type = CSVDiff
      input = johnsonsb.i
      csvdiff = 'johnsonsb_out.csv'
      allow_test_objects = true

      detail = 'Johnson Special Bounded (SB), and'
    []
    [logistic]
      type = CSVDiff
      input = logistic.i
      csvdiff = 'logistic_out.csv'
      allow_test_objects = true

      detail = 'logistic distributions.'
    []
  []

  [normal_direct]
    type = CSVDiff
    input = normal_direct.i
    csvdiff = 'normal_direct_out.csv'
    allow_test_objects = true
    requirement = 'The system shall provide a normal distribution with the ability to directly call '
                  'methods with distribution inputs.'
    design = 'Normal.md'
    issues = '#12720'
  []
  [normal_direct_type_error]
    type = RunException
    input = normal_direct_type_error.i
    allow_test_objects = true
    expect_err = "The 'cdf' object failed to retrieve 'this_is_the_wrong_type' distribution with the "
                 "desired type."
    requirement = 'The system shall produce an error if a distribution is retrieved with the '
                  'differing type than supplied.'
    design = 'Normal.md'
    issues = '#12720'
  []
[]
